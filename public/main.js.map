{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/components/add-movie-form/add-movie-form.component.css","webpack:///./src/app/components/add-movie-form/add-movie-form.component.html","webpack:///./src/app/components/add-movie-form/add-movie-form.component.ts","webpack:///./src/app/components/auth/auth.guard.ts","webpack:///./src/app/components/auth/auth.interceptor.ts","webpack:///./src/app/components/auth/authentication.component.html","webpack:///./src/app/components/auth/authentication.component.ts","webpack:///./src/app/components/auth/logout.component.html","webpack:///./src/app/components/auth/logout.component.ts","webpack:///./src/app/components/award/award.component.css","webpack:///./src/app/components/award/award.component.html","webpack:///./src/app/components/award/award.component.ts","webpack:///./src/app/components/coming-soon-movie-list/coming-soon-movie-list.component.css","webpack:///./src/app/components/coming-soon-movie-list/coming-soon-movie-list.component.html","webpack:///./src/app/components/coming-soon-movie-list/coming-soon-movie-list.component.ts","webpack:///./src/app/components/company-information/company-information.component.css","webpack:///./src/app/components/company-information/company-information.component.html","webpack:///./src/app/components/company-information/company-information.component.ts","webpack:///./src/app/components/edit-movie-form/edit-movie-form.component.css","webpack:///./src/app/components/edit-movie-form/edit-movie-form.component.html","webpack:///./src/app/components/edit-movie-form/edit-movie-form.component.ts","webpack:///./src/app/components/footer/footer.component.css","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/genre/genre.component.css","webpack:///./src/app/components/genre/genre.component.html","webpack:///./src/app/components/genre/genre.component.ts","webpack:///./src/app/components/header/header.component.css","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/movie/movie.component.css","webpack:///./src/app/components/movie/movie.component.html","webpack:///./src/app/components/movie/movie.component.ts","webpack:///./src/app/components/navigation-bar/navigation-bar.component.css","webpack:///./src/app/components/navigation-bar/navigation-bar.component.html","webpack:///./src/app/components/navigation-bar/navigation-bar.component.ts","webpack:///./src/app/components/not-found-page/not-found-page.component.css","webpack:///./src/app/components/not-found-page/not-found-page.component.html","webpack:///./src/app/components/not-found-page/not-found-page.component.ts","webpack:///./src/app/components/now-showing-movie-list/now-showing-movie-list.component.css","webpack:///./src/app/components/now-showing-movie-list/now-showing-movie-list.component.html","webpack:///./src/app/components/now-showing-movie-list/now-showing-movie-list.component.ts","webpack:///./src/app/components/posts/posts.component.css","webpack:///./src/app/components/posts/posts.component.html","webpack:///./src/app/components/posts/posts.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/search-bar/search-bar.component.css","webpack:///./src/app/components/search-bar/search-bar.component.html","webpack:///./src/app/components/search-bar/search-bar.component.ts","webpack:///./src/app/components/user-profile/user-profile.component.css","webpack:///./src/app/components/user-profile/user-profile.component.html","webpack:///./src/app/components/user-profile/user-profile.component.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/coming-soon-movies.service.ts","webpack:///./src/app/services/now-showing-movies.service.ts","webpack:///./src/app/services/post.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<header></header>\\n<navigation-bar></navigation-bar>\\n<router-outlet></router-outlet>\\n<footer></footer>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'GoldenCinema';\n}\n","// Built-in imports\nimport { ComingSoonMoviesService } from \"./services/coming-soon-movies.service\";\nimport { NowShowingMoviesService } from \"./services/now-showing-movies.service\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { HttpModule } from \"@angular/http\";\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\n\n// Component imports\nimport { AppComponent } from \"./app.component\";\nimport { SearchBarComponent } from \"./components/search-bar/search-bar.component\";\nimport { NavigationBarComponent } from \"./components/navigation-bar/navigation-bar.component\";\nimport { NowShowingMovieListComponent } from \"./components/now-showing-movie-list/now-showing-movie-list.component\";\nimport { ComingSoonMovieListComponent } from \"./components/coming-soon-movie-list/coming-soon-movie-list.component\";\nimport { FooterComponent } from \"./components/footer/footer.component\";\nimport { HeaderComponent } from \"./components/header/header.component\";\nimport { GenreComponent } from \"./components/genre/genre.component\";\nimport { HomeComponent } from \"./components/home/home.component\";\nimport { AwardComponent } from \"./components/award/award.component\";\nimport { CompanyInformationComponent } from \"./components/company-information/company-information.component\";\nimport { NotFoundPageComponent } from \"./components/not-found-page/not-found-page.component\";\nimport { AddMovieFormComponent } from \"./components/add-movie-form/add-movie-form.component\";\nimport { LoginComponent } from \"./components/login/login.component\";\nimport { RegisterComponent } from \"./components/register/register.component\";\nimport { EditMovieFormComponent } from \"./components/edit-movie-form/edit-movie-form.component\";\nimport { PostsComponent } from \"./components/posts/posts.component\";\nimport { MovieComponent } from \"./components/movie/movie.component\";\nimport { AuthenticationComponent } from \"./components/auth/authentication.component\";\nimport { LogoutComponent } from \"./components/auth/logout.component\";\n\n// Service imports\nimport { PostService } from \"./services/post.service\";\nimport { AuthenticationService } from \"./services/authentication.service\";\n\n// Route imports\nimport { RoutingModule } from \"./app.routing\";\nimport { UserProfileComponent } from \"./components/user-profile/user-profile.component\";\n\n// Other imports\nimport { AuthGuard } from \"./components/auth/auth.guard\";\nimport { AuthInterceptor } from \"./components/auth/auth.interceptor\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchBarComponent,\n    NavigationBarComponent,\n    NowShowingMovieListComponent,\n    ComingSoonMovieListComponent,\n    FooterComponent,\n    HeaderComponent,\n    GenreComponent,\n    HomeComponent,\n    AwardComponent,\n    CompanyInformationComponent,\n    AddMovieFormComponent,\n    NotFoundPageComponent,\n    LoginComponent,\n    RegisterComponent,\n    EditMovieFormComponent,\n    PostsComponent,\n    MovieComponent,\n    AuthenticationComponent,\n    LogoutComponent,\n    UserProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    HttpModule,\n    RoutingModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    PostService,\n    NowShowingMoviesService,\n    ComingSoonMoviesService,\n    AuthenticationService,\n    AuthGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { MovieComponent } from './components/movie/movie.component';\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { GenreComponent } from \"./components/genre/genre.component\";\nimport { HomeComponent } from \"./components/home/home.component\";\nimport { AwardComponent } from \"./components/award/award.component\";\nimport { CompanyInformationComponent } from \"./components/company-information/company-information.component\";\nimport { NotFoundPageComponent } from \"./components/not-found-page/not-found-page.component\";\nimport { AddMovieFormComponent } from \"./components/add-movie-form/add-movie-form.component\";\nimport { RegisterComponent } from \"./components/register/register.component\";\nimport { EditMovieFormComponent } from \"./components/edit-movie-form/edit-movie-form.component\";\nimport { LoginComponent } from \"./components/login/login.component\";\nimport { UserProfileComponent } from \"./components/user-profile/user-profile.component\";\nimport { AuthGuard } from \"./components/auth/auth.guard\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: HomeComponent\n  },\n  {\n    path: \"home\",\n    component: HomeComponent\n  },\n  {\n    path: \"genre\",\n    component: GenreComponent\n  },\n  {\n    path: \"award\",\n    component: AwardComponent\n  },\n  {\n    path: \"companyInformation\",\n    component: CompanyInformationComponent\n  },\n  {\n    path: \"addMovieForm\",\n    component: AddMovieFormComponent\n  },\n  {\n    path: \"login\",\n    component: LoginComponent\n  },\n  {\n    path: \"register\",\n    component: RegisterComponent\n  },\n  {\n    path: \"userprofile\",\n    component: UserProfileComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"editMovieForm\",\n    component: EditMovieFormComponent\n  },\n  {\n    path: \"movie/:id\",\n    component: MovieComponent\n  },\n  {\n    path: \"**\",\n    component: NotFoundPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class RoutingModule { }\n","module.exports = \"\"","module.exports = \"<h2>Add new movie</h2>\\n\\n<form>\\n    <div class=\\\"form-group\\\">\\n        <label>Movie Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Year</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Director(s)</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Actors</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Summary</label>\\n        <textarea class=\\\"form-control\\\"></textarea>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Session</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <button class=\\\"btn btn-primary\\\">Submit</button>\\n</form>\"","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: \"add-movie-form\",\n  templateUrl: \"./add-movie-form.component.html\",\n  styleUrls: [\"./add-movie-form.component.css\"]\n})\nexport class AddMovieFormComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot\n} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { AuthenticationService } from \"../../services/authentication.service\";\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    // If user is not logged in, redirect to login page and delete token in local storage\n    if (!this.authService.isLoggedIn()) {\n      this.router.navigateByUrl(\"/login\");\n      this.authService.deleteToken();\n      return false;\n    }\n    return true;\n  }\n}\n","import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent\n} from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { tap } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\nimport { AuthenticationService } from \"../../services/authentication.service\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router\n  ) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    if (req.headers.get(\"noauth\")) return next.handle(req.clone());\n    else {\n      const clonedReq = req.clone({\n        headers: req.headers.set(\n          \"Authorization\",\n          \"Bearer \" + this.authService.getToken()\n        )\n      });\n      return next.handle(clonedReq).pipe(\n        tap(\n          event => {},\n          err => {\n            if (err.error.auth == false) {\n              this.router.navigateByUrl(\"/login\");\n            }\n          }\n        )\n      );\n    }\n  }\n}\n","module.exports = \"<header class=\\\"row spacing\\\">\\n    <nav class=\\\"col-md-8-col-md-offset-2\\\">\\n        <ul class=\\\"nav-nav-tabs\\\">\\n            <li><a>Login</a></li>\\n            <li><a>Register</a></li>\\n            <li><a>Logout</a></li>\\n        </ul>\\n    </nav>\\n</header>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"authentication\",\n  templateUrl: \"./authentication.component.html\"\n})\nexport class AuthenticationComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"<div class=\\\"col-md-8 col-md-offset-2\\\">\\n    <button class=\\\"btn btn-danger\\\" (click)=\\\"onLogout()\\\">Logout</button>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"logout\",\n  templateUrl: \"./logout.component.html\"\n})\nexport class LogoutComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n\n  onLogout() {}\n}\n","module.exports = \"\"","module.exports = \"<h2>Awards</h2>\\n<p>Award page is in progress.</p>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"award\",\n  templateUrl: \"./award.component.html\",\n  styleUrls: [\"./award.component.css\"]\n})\nexport class AwardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \".comingSoonBlock {\\n    border-style: solid;\\n    background-color: whitesmoke;\\n  }\\n  \\n  h2 {\\n    text-align: center;\\n  }\\n  \"","module.exports = \"<div class=\\\"comingSoonBlock\\\">\\n  <h2>Coming Soon Movies</h2>\\n  <ul>\\n    <li routerLink=\\\"../editMovieForm\\\" *ngFor=\\\"let movie of movies\\\">\\n      <a [routerLink]=\\\"['../movie', movie._id]\\\">{{movie.name}}</a>\\n    </li>\\n  </ul>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { PostService } from \"../../services/post.service\";\n\n@Component({\n  selector: \"coming-soon-movie-list\",\n  templateUrl: \"./coming-soon-movie-list.component.html\",\n  styleUrls: [\"./coming-soon-movie-list.component.css\"]\n})\nexport class ComingSoonMovieListComponent implements OnInit {\n  movies: any[];\n\n  constructor(private service: PostService) {\n  }\n\n  ngOnInit() {\n    this.service.getPosts().subscribe(response => {\n      this.movies = response.json()\n        .filter(movie => movie.status === 'comingSoon');\n    });\n  }\n\n\n}\n\n\n","module.exports = \"\"","module.exports = \"<h2>About us</h2>\\n<p>About us page is in progress.</p>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"company-information\",\n  templateUrl: \"./company-information.component.html\",\n  styleUrls: [\"./company-information.component.css\"]\n})\nexport class CompanyInformationComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"\"","module.exports = \"<h2>Edit movie</h2>\\n\\n<form>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"movieName\\\">Movie Name</label>\\n        <input id=\\\"movieName\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Year</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Director(s)</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Actors</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Summary</label>\\n        <textarea class=\\\"form-control\\\"></textarea>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Session</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <button class=\\\"btn btn-primary\\\">Save changes</button>\\n</form>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"edit-movie-form\",\n  templateUrl: \"./edit-movie-form.component.html\",\n  styleUrls: [\"./edit-movie-form.component.css\"]\n})\nexport class EditMovieFormComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \".footer {\\n  background-color: whitesmoke;\\n  position: fixed;\\n  left: 0;\\n  bottom: 0;\\n  width: 100%;\\n  color: black;\\n  text-align: center;\\n}\\n\"","module.exports = \"<div class=\\\"footer\\\">\\n  {{companyName}}\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"footer\",\n  templateUrl: \"./footer.component.html\",\n  styleUrls: [\"./footer.component.css\"]\n})\nexport class FooterComponent implements OnInit {\n  companyName = \"@Golden Time Cooperation\";\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"\"","module.exports = \"<h2>Gerne</h2>\\n<p>Gerne page is in progress.</p>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"genre\",\n  templateUrl: \"./genre.component.html\",\n  styleUrls: [\"./genre.component.css\"]\n})\nexport class GenreComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"h1 {\\n  text-align: center;\\n  font: bold;\\n}\\n\"","module.exports = \"<div>\\n  <h1>{{title}}</h1>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"header\",\n  templateUrl: \"./header.component.html\",\n  styleUrls: [\"./header.component.css\"]\n})\nexport class HeaderComponent implements OnInit {\n  title = \"Golden Time Cinema\";\n\n  constructor() { }\n\n  ngOnInit() { }\n}\n","module.exports = \"\"","module.exports = \"<br/>\\n<br/>\\n<search-bar></search-bar>\\n<br/>\\n<br/>\\n<now-showing-movie-list></now-showing-movie-list>\\n<br/>\\n<coming-soon-movie-list></coming-soon-movie-list>\\n<br/>\\n<button class=\\\"btn btn-primary\\\" routerLink=\\\"../addMovieForm\\\">New Movie</button>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.css\"]\n})\nexport class HomeComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"\"","module.exports = \"<h2>Log in</h2>\\n<div class=\\\"col-md-8-col-md-offset-2\\\">\\n\\n    <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"loginForm.valid && onLogin(loginForm)\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Email</label>\\n            <input type=\\\"text\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"authService.selectedUser.email\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" class=\\\"form-control\\\"\\n                required [pattern]=\\\"emailRegex\\\" [ngClass]=\\\"{ 'ng-invalid': loginForm.submitted && !email.valid }\\\">\\n            <div *ngIf=\\\"loginForm.submitted && email.errors\\\">\\n                <label *ngIf=\\\"email.errors.required\\\" class=\\\"validation-message\\\">Email is required.</label>\\n                <label *ngIf=\\\"email.errors.pattern\\\" class=\\\"validation-message\\\">Invalid email address.</label>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Email</label>\\n            <input type=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"authService.selectedUser.password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\"\\n                class=\\\"form-control\\\" minlength=\\\"4\\\" required [ngClass]=\\\"{ 'ng-invalid': loginForm.submitted && !password.valid }\\\">\\n            <div *ngIf=\\\"loginForm.submitted && password.errors\\\">\\n                <label *ngIf=\\\"password.errors.required\\\" class=\\\"validation-message\\\">Password is required.</label>\\n            </div>\\n        </div>\\n\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Login</button>\\n    </form>\\n\\n</div>\\n\\n\\n<!-- Error message -->\\n<div class=\\\"alert\\\" *ngIf=\\\"errorMessages\\\">\\n    {{errorMessages}}\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { AuthenticationService } from \"../../services/authentication.service\";\n\n@Component({\n  selector: \"login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit {\n  // Email regular expression to validate email format\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  errorMessages: string;\n\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router\n  ) {}\n\n  model = {\n    email: \"\",\n    password: \"\"\n  };\n\n  ngOnInit() {\n    // If user is already logged in, redirect to user profile page\n    if (this.authService.isLoggedIn()) {\n      this.router.navigateByUrl(\"/userprofile\");\n    }\n  }\n\n  onLogin(form: NgForm) {\n    this.authService.login(form.value).subscribe(\n      // successful authentication\n      res => {\n        this.authService.setToken(res[\"token\"]); // save token to local storage\n        this.router.navigateByUrl(\"/userprofile\"); // redirect to user profile page\n      },\n      // If errors occur\n      err => {\n        this.errorMessages = err.error.message;\n      }\n    );\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngFor=\\\"let property of movie\\\">\\n  <br />\\n  <h2>{{property.name}}</h2>\\n  <br />\\n  <label>Sessions: {{property.showTime}}</label>\\n  <br />\\n  <label>Running time: {{property.runningTime}}</label>\\n  <br />\\n  <label>Director(s): {{property.directors}}</label>\\n  <br />\\n  <label>Cast: {{property.stars}}</label>\\n  <br />\\n  <label>Story: {{property.storyline}}</label>\\n  <br />\\n  <label>Status: {{property.status}}</label>\\n</div>\"","import { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { PostService } from \"../../services/post.service\";\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\nexport class MovieComponent implements OnInit {\n\n  movie: any[];\n\n  constructor(private route: ActivatedRoute, private service: PostService) { }\n\n  ngOnInit() {\n    this.route.paramMap\n      .subscribe(params => {\n        let id = params.get('_id');\n        console.log(id);\n        this.service.getPostsById(id).subscribe(response => {\n          this.movie = response.json();\n          console.log(this.movie);\n        })\n      })\n  }\n\n}\n","module.exports = \".navigationBar {\\n  display: block;\\n  background-color: whitesmoke;\\n}\\n\\na {\\n  text-decoration: none;\\n  color: black;\\n  padding-right: 50px;\\n  padding-left: 50px;\\n}\\n\"","module.exports = \"<nav class=\\\"col-md-10 col-md-offset-2\\\">\\n  <ul class=\\\"nav nav-pills\\\">\\n    <li routerLinkActive=\\\"active\\\">\\n      <a routerLink=\\\"../home\\\">{{home}}</a>\\n    </li>\\n    <li routerLinkActive=\\\"active\\\">\\n      <a routerLink=\\\"../genre\\\">{{genre}}</a>\\n    </li>\\n    <li routerLinkActive=\\\"active\\\">\\n      <a routerLink=\\\"../award\\\">{{award}}</a>\\n    </li>\\n    <li routerLinkActive=\\\"active\\\">\\n      <a routerLink=\\\"../companyInformation\\\">{{companyInformation}}</a>\\n    </li>\\n    <!-- User authService.isLoggedIn directly here to solve problem of manually refreshing the page to see changes -->\\n    <li *ngIf=\\\"!authService.isLoggedIn()\\\" routerLinkActive=\\\"active\\\">\\n      <a routerLink=\\\"../login\\\">{{logIn}}</a>\\n    </li>\\n    <li *ngIf=\\\"!authService.isLoggedIn()\\\" routerLinkActive=\\\"active\\\">\\n      <a routerLink=\\\"../register\\\">{{register}}</a>\\n    </li>\\n    <li *ngIf=\\\"authService.isLoggedIn()\\\" routerLinkActive=\\\"active\\\">\\n      <a routerLink=\\\"../userprofile\\\">{{profile}}</a>\\n    </li>\\n  </ul>\\n</nav>\"","import { Component, OnInit } from \"@angular/core\";\nimport { AuthenticationService } from \"../../services/authentication.service\";\n\n@Component({\n  selector: \"navigation-bar\",\n  templateUrl: \"./navigation-bar.component.html\",\n  styleUrls: [\"./navigation-bar.component.css\"]\n})\nexport class NavigationBarComponent implements OnInit {\n  logIn = \"Log In\";\n  home = \"Home\";\n  register = \"Register\";\n  genre = \"Genre\";\n  award = \"Awards\";\n  companyInformation = \"About us\";\n  profile = \"Profile\";\n\n  constructor(private authService: AuthenticationService) {}\n\n  ngOnInit() {}\n}\n","module.exports = \"\"","module.exports = \"<p>Sorry, the page has not been found!</p>\\n<footer></footer>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"not-found-page\",\n  templateUrl: \"./not-found-page.component.html\",\n  styleUrls: [\"./not-found-page.component.css\"]\n})\nexport class NotFoundPageComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \".nowShowingBlock {\\n    border-style: solid;\\n    background-color: whitesmoke;\\n  }\\n  \\n  h2 {\\n    text-align: center;\\n  }\\n  \"","module.exports = \"<div class=\\\"nowShowingBlock\\\">\\n  <h2>Now Showing Movies</h2>\\n  <ul>\\n    <li *ngFor=\\\"let movie of movies\\\"><a>{{movie.name}}</a></li>\\n  </ul>\\n\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { PostService } from \"../../services/post.service\";\n\n@Component({\n  selector: \"now-showing-movie-list\",\n  templateUrl: \"./now-showing-movie-list.component.html\",\n  styleUrls: [\"./now-showing-movie-list.component.css\"]\n})\nexport class NowShowingMovieListComponent implements OnInit {\n  movies: any[];\n  nowShowingMovies: any[];\n  constructor(private service: PostService) { }\n\n  ngOnInit() {\n    this.service.getPosts().subscribe(response => {\n      this.movies = response.json()\n        .filter(movie => movie.status === 'nowShowing');\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<input (keyup.enter)=\\\"createPost(title)\\\" #title type=\\\"text\\\" class=\\\"form-control\\\">\\n<ul class=\\\"list-group\\\">\\n  <li *ngFor=\\\"let post of posts\\\" class=\\\"list-group-item\\\">\\n    <button (click)=\\\"updatePost(post)\\\" btn btn-default btn-sm>Update</button>\\n    <button (click)=\\\"deletePost(post)\\\" btn btn-default btn-sm>Delete</button>\\n    {{post.title}}\\n  </li>\\n</ul>\"","import { PostService } from \"../../services/post.service\";\nimport { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"posts\",\n  templateUrl: \"./posts.component.html\",\n  styleUrls: [\"./posts.component.css\"]\n})\nexport class PostsComponent implements OnInit {\n  posts: any[];\n\n  constructor(private service: PostService) {}\n\n  ngOnInit() {\n    this.service.getPosts().subscribe(response => {\n      this.posts = response.json();\n    });\n  }\n\n  createPost(input: HTMLInputElement) {\n    let post = { title: input.value };\n    input.value = \"\";\n\n    this.service.createPosts(post).subscribe(response => {\n      post[\"id\"] = response.json().id;\n      this.posts.splice(0, 0, post);\n    });\n  }\n\n  updatePost(post) {\n    //this.http.patch(this.url, JSON.stringify({ isRead: true }))\n    this.service.updatePosts(post).subscribe(response => {\n      console.log(response.json());\n    });\n  }\n\n  deletePost(post) {\n    this.service.deletePosts(post.id).subscribe(response => {\n      let index = this.posts.indexOf(post);\n      this.posts.splice(index, 1);\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<h2>Create an account</h2>\\n\\n<div class=\\\"col-md-8-col-md-offset-2\\\">\\n    <!-- Registration form -->\\n    <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"registerForm.valid && onRegister(registerForm)\\\">\\n        <!-- Firstname input for user registration -->\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"firstName\\\">First Name</label>\\n            <input type=\\\"text\\\" #firstName=\\\"ngModel\\\" [(ngModel)]=\\\"authService.selectedUser.firstName\\\" name=\\\"firstName\\\" placeholder=\\\"First Name\\\"\\n                class=\\\"form-control\\\" required [ngClass]=\\\"{ 'ng-invalid': registerForm.submitted && !firstName.valid }\\\">\\n            <!-- Display of Validation for firstname input -->\\n            <div *ngIf=\\\"registerForm.submitted && firstName.errors\\\">\\n                <label *ngIf=\\\"firstName.errors.required\\\" class=\\\"validation-message\\\">First name is required.</label>\\n            </div>\\n        </div>\\n\\n        <!-- Lastname input for user registration -->\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"lastName\\\">Last Name</label>\\n            <input type=\\\"text\\\" #lastName=\\\"ngModel\\\" [(ngModel)]=\\\"authService.selectedUser.lastName\\\" name=\\\"lastName\\\" placeholder=\\\"Last Name\\\"\\n                class=\\\"form-control\\\" required [ngClass]=\\\"{ 'ng-invalid': registerForm.submitted && !lastName.valid }\\\">\\n            <!-- Display of Validation for lastname input -->\\n            <div *ngIf=\\\"registerForm.submitted && lastName.errors\\\">\\n                <label *ngIf=\\\"lastName.errors.required\\\" class=\\\"validation-message\\\">Last name is required.</label>\\n            </div>\\n        </div>\\n\\n        <!-- Email input for user registration -->\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Email</label>\\n            <input type=\\\"text\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"authService.selectedUser.email\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" class=\\\"form-control\\\"\\n                required [pattern]=\\\"emailRegex\\\" [ngClass]=\\\"{ 'ng-invalid': registerForm.submitted && !email.valid }\\\">\\n            <!-- Display of Validation for email input -->\\n            <div *ngIf=\\\"registerForm.submitted && email.errors\\\">\\n                <label *ngIf=\\\"email.errors.required\\\" class=\\\"validation-message\\\">Email is required.</label>\\n                <label *ngIf=\\\"email.errors.pattern\\\" class=\\\"validation-message\\\">Invalid email address.</label>\\n            </div>\\n        </div>\\n\\n        <!-- Password input for user registration -->\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password</label>\\n            <input type=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"authService.selectedUser.password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\"\\n                class=\\\"form-control\\\" minlength=\\\"4\\\" required [ngClass]=\\\"{ 'ng-invalid': registerForm.submitted && !password.valid }\\\">\\n            <!-- Display of Validation for password input -->\\n            <div *ngIf=\\\"registerForm.submitted && password.errors\\\">\\n                <label *ngIf=\\\"password.errors.required\\\" class=\\\"validation-message\\\">Password is required.</label>\\n                <label *ngIf=\\\"password.errors.minlength\\\" class=\\\"validation-message\\\">Password must have at least 4 characters.</label>\\n            </div>\\n        </div>\\n\\n        <!-- Gender input for user registration -->\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"gender\\\">Gender</label>\\n            <select #gender=\\\"ngModel\\\" [(ngModel)]=\\\"authService.selectedUser.gender\\\" name=\\\"gender\\\" placeholder=\\\"Gender\\\" class=\\\"form-control\\\"\\n                required [ngClass]=\\\"{ 'ng-invalid': registerForm.submitted && !gender.valid }\\\">\\n                <option [ngValue]=\\\"null\\\" disabled>Select gender</option>\\n                <option *ngFor=\\\"let gender of genders\\\" [ngValue]=\\\"gender\\\">\\n                    {{ gender}}\\n                </option>\\n            </select>\\n            <!-- Display of Validation for lastname input -->\\n            <div *ngIf=\\\"registerForm.submitted && gender.errors\\\">\\n                <label *ngIf=\\\"gender.errors.required\\\" class=\\\"validation-message\\\">Gender is required.</label>\\n            </div>\\n        </div>\\n\\n        <!-- Date of birth input for user registration -->\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"dob\\\">Date of birth</label>\\n            <input type=\\\"date\\\" #dob=\\\"ngModel\\\" [(ngModel)]=\\\"authService.selectedUser.dob\\\" name=\\\"dob\\\" placeholder=\\\"Date of Birth\\\" class=\\\"form-control\\\"\\n                required [ngClass]=\\\"{ 'ng-invalid': registerForm.submitted && !dob.valid }\\\">\\n            <!-- Display of Validation for lastname input -->\\n            <div *ngIf=\\\"registerForm.submitted && dob.errors\\\">\\n                <label *ngIf=\\\"dob.errors.required\\\" class=\\\"validation-message\\\">Date of birth is required.</label>\\n            </div>\\n        </div>\\n\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Register</button>\\n    </form>\\n\\n</div>\\n\\n\\n<!-- Success message -->\\n<div class=\\\"success\\\" *ngIf=\\\"successMessage\\\">\\n    Registration is completed\\n</div>\\n\\n\\n<!-- Error message -->\\n<div class=\\\"alert\\\" *ngIf=\\\"errorMessages\\\">\\n    {{errorMessages}}\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { AuthenticationService } from \"../../services/authentication.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"register\",\n  templateUrl: \"./register.component.html\",\n  styleUrls: [\"./register.component.css\"]\n})\nexport class RegisterComponent implements OnInit {\n  // Email regular expression to validate email format\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  gender = null;\n  genders = [\"Female\", \"Male\", \"Other\"];\n  successMessage: boolean;\n  errorMessages: string;\n\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    // If user is already logged in, redirect to user profile page\n    if (this.authService.isLoggedIn()) {\n      this.router.navigateByUrl(\"/userprofile\");\n    }\n  }\n\n  onRegister(form: NgForm) {\n    this.authService.registerUser(form.value).subscribe(\n      // if registration is successfull\n      res => {\n        this.successMessage = true;\n        setTimeout(() => (this.successMessage = false), 4000); // Success message dissapears after 4 seconds\n        this.resetForm(form);\n      },\n\n      // if there are errors sent from server-side\n      err => {\n        if (err.status === 422) {\n          this.errorMessages = err.error.join(\"<br/>\");\n        } else\n          this.errorMessages = \"Something went wrong. Please contact admin.\";\n      }\n    );\n  }\n\n  resetForm(form: NgForm) {\n    this.authService.selectedUser = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      gender: \"\",\n      dob: null\n    };\n    form.resetForm();\n    this.errorMessages = \"\";\n  }\n}\n","module.exports = \"\"","module.exports = \"<input type=\\\"text\\\" value={{defaultText}}>\\n<button class=\\\"btn btn-primary\\\">{{buttonName}}</button>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"search-bar\",\n  templateUrl: \"./search-bar.component.html\",\n  styleUrls: [\"./search-bar.component.css\"]\n})\nexport class SearchBarComponent implements OnInit {\n  defaultText = \"Plese enter here\";\n  buttonName = \"Search\";\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"\"","module.exports = \"<table *ngIf=\\\"userDetails\\\">\\n\\n  <h2>User Profile</h2>\\n\\n  <div>\\n    <p>First Name: {{userDetails.firstName}}</p>\\n    <p>Last Name: {{userDetails.lastName}}</p>\\n    <p>Email: {{userDetails.email}}</p>\\n    <p>Gender: {{userDetails.gender}}</p>\\n    <p>Date of birth: {{userDetails.dob}}</p>\\n  </div>\\n\\n\\n\\n\\n  <button (click)=\\\"onLogout()\\\">Logout</button>\"","import { Component, OnInit } from \"@angular/core\";\nimport { AuthenticationService } from \"../../services/authentication.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"user-profile\",\n  templateUrl: \"./user-profile.component.html\",\n  styleUrls: [\"./user-profile.component.css\"]\n})\nexport class UserProfileComponent implements OnInit {\n  userDetails;\n\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.authService.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res[\"user\"];\n      },\n      err => {}\n    );\n  }\n\n  // Method to logout: delete token and redirect user to login page\n  onLogout() {\n    this.authService.deleteToken();\n    this.router.navigate([\"/login\"]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\nimport { environment } from \"../../environments/environment\";\nimport { User } from \"../components/auth/user.model\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthenticationService {\n  // Initialize a User object with empty email and password\n  selectedUser: User = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    gender: \"\",\n    dob: null\n  };\n\n  noAuthHeader = { headers: new HttpHeaders({ NoAuth: \"True\" }) };\n\n  constructor(private http: HttpClient) {}\n\n  // httpMethods\n\n  registerUser(user: User) {\n    return this.http.post(\n      environment.apiBaseUrl + \"/register\",\n      user,\n      this.noAuthHeader\n    );\n  }\n\n  login(authCredentials) {\n    return this.http.post(\n      environment.apiBaseUrl + \"/authenticate\",\n      authCredentials,\n      this.noAuthHeader\n    );\n  }\n\n  // need jwt in the header\n  getUserProfile() {\n    return this.http.get(environment.apiBaseUrl + \"/userprofile\");\n  }\n\n  //Helper Methods\n\n  // save token of current user inside local storage\n  setToken(token: string) {\n    localStorage.setItem(\"token\", token);\n  }\n\n  // get the token in local storage\n  getToken() {\n    return localStorage.getItem(\"token\");\n  }\n\n  // delete token inside local storage\n  deleteToken() {\n    localStorage.removeItem(\"token\");\n  }\n\n  // Extract user payload from token\n  getUserPayload() {\n    var token = this.getToken();\n    if (token) {\n      var userPayload = atob(token.split(\".\")[1]);\n      return JSON.parse(userPayload);\n    } else return null;\n  }\n\n  isLoggedIn() {\n    var userPayload = this.getUserPayload();\n    // check if jwt expiration time is over or not\n    if (userPayload) return userPayload.exp > Date.now() / 1000;\n    else return false;\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ComingSoonMoviesService {\n\n  getUpcomingMovies() {\n    return [\n      \"The Lord of Ring\",\n      \"Notting Hill\",\n      \"Harry Potter\",\n      \"American Hustles\"\n    ];\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class NowShowingMoviesService {\n  getShowingMovies() {\n    return [\n      \"Good Will Hunting\",\n      \"Forest Gump\",\n      \"Catch Me If You Can\",\n      \"Terminal\"\n    ];\n  }\n}\n","import { Http } from '@angular/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n  private url = '/api/movies';\n\n  constructor(private http: Http) { }\n\n  getPosts() {\n    return this.http.get(this.url);\n  }\n\n  getPostsById(_id: string) {\n    return this.http.get(this.url + '/' + _id);\n  }\n\n  createPosts(post) {\n    return this.http.post(this.url, JSON.stringify(post));\n  }\n\n  updatePosts(post) {\n    return this.http.put(this.url + '/' + post.id, JSON.stringify(post));\n  }\n\n  deletePosts(id) {\n    return this.http.delete(this.url + '/' + id);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl: \"http://localhost:3000/api\"\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}