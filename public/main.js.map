{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-movie-form/add-movie-form.component.css","webpack:///./src/app/components/add-movie-form/add-movie-form.component.html","webpack:///./src/app/components/add-movie-form/add-movie-form.component.ts","webpack:///./src/app/components/award/award.component.css","webpack:///./src/app/components/award/award.component.html","webpack:///./src/app/components/award/award.component.ts","webpack:///./src/app/components/coming-soon-movie-list/coming-soon-movie-list.component.css","webpack:///./src/app/components/coming-soon-movie-list/coming-soon-movie-list.component.html","webpack:///./src/app/components/coming-soon-movie-list/coming-soon-movie-list.component.ts","webpack:///./src/app/components/company-information/company-information.component.css","webpack:///./src/app/components/company-information/company-information.component.html","webpack:///./src/app/components/company-information/company-information.component.ts","webpack:///./src/app/components/edit-movie-form/edit-movie-form.component.css","webpack:///./src/app/components/edit-movie-form/edit-movie-form.component.html","webpack:///./src/app/components/edit-movie-form/edit-movie-form.component.ts","webpack:///./src/app/components/footer/footer.component.css","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/genre/genre.component.css","webpack:///./src/app/components/genre/genre.component.html","webpack:///./src/app/components/genre/genre.component.ts","webpack:///./src/app/components/header/header.component.css","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/movie/movie.component.css","webpack:///./src/app/components/movie/movie.component.html","webpack:///./src/app/components/movie/movie.component.ts","webpack:///./src/app/components/navigation-bar/navigation-bar.component.css","webpack:///./src/app/components/navigation-bar/navigation-bar.component.html","webpack:///./src/app/components/navigation-bar/navigation-bar.component.ts","webpack:///./src/app/components/not-found-page/not-found-page.component.css","webpack:///./src/app/components/not-found-page/not-found-page.component.html","webpack:///./src/app/components/not-found-page/not-found-page.component.ts","webpack:///./src/app/components/now-showing-movie-list/now-showing-movie-list.component.css","webpack:///./src/app/components/now-showing-movie-list/now-showing-movie-list.component.html","webpack:///./src/app/components/now-showing-movie-list/now-showing-movie-list.component.ts","webpack:///./src/app/components/posts/posts.component.css","webpack:///./src/app/components/posts/posts.component.html","webpack:///./src/app/components/posts/posts.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/search-bar/search-bar.component.css","webpack:///./src/app/components/search-bar/search-bar.component.html","webpack:///./src/app/components/search-bar/search-bar.component.ts","webpack:///./src/app/routing.module.ts","webpack:///./src/app/services/coming-soon-movies.service.ts","webpack:///./src/app/services/now-showing-movies.service.ts","webpack:///./src/app/services/post.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<header></header>\\n<navigation-bar></navigation-bar>\\n<router-outlet></router-outlet>\\n<footer></footer>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'GoldenCinema';\n}\n","import { PostService } from \"./services/post.service\";\nimport { ComingSoonMoviesService } from \"./services/coming-soon-movies.service\";\nimport { NowShowingMoviesService } from \"./services/now-showing-movies.service\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { RoutingModule } from \"./routing.module\";\n\nimport { HttpModule } from \"@angular/http\";\nimport { AppComponent } from \"./app.component\";\nimport { SearchBarComponent } from \"./components/search-bar/search-bar.component\";\nimport { NavigationBarComponent } from \"./components/navigation-bar/navigation-bar.component\";\nimport { NowShowingMovieListComponent } from \"./components/now-showing-movie-list/now-showing-movie-list.component\";\nimport { ComingSoonMovieListComponent } from \"./components/coming-soon-movie-list/coming-soon-movie-list.component\";\nimport { FooterComponent } from \"./components/footer/footer.component\";\nimport { HeaderComponent } from \"./components/header/header.component\";\nimport { GenreComponent } from \"./components/genre/genre.component\";\nimport { HomeComponent } from \"./components/home/home.component\";\nimport { AwardComponent } from \"./components/award/award.component\";\nimport { CompanyInformationComponent } from \"./components/company-information/company-information.component\";\nimport { NotFoundPageComponent } from \"./components/not-found-page/not-found-page.component\";\nimport { AddMovieFormComponent } from \"./components/add-movie-form/add-movie-form.component\";\nimport { LoginComponent } from \"./components/login/login.component\";\nimport { RegisterComponent } from \"./components/register/register.component\";\nimport { EditMovieFormComponent } from \"./components/edit-movie-form/edit-movie-form.component\";\nimport { PostsComponent } from \"./components/posts/posts.component\";\nimport { MovieComponent } from './components/movie/movie.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchBarComponent,\n    NavigationBarComponent,\n    NowShowingMovieListComponent,\n    ComingSoonMovieListComponent,\n    FooterComponent,\n    HeaderComponent,\n    GenreComponent,\n    HomeComponent,\n    AwardComponent,\n    CompanyInformationComponent,\n    AddMovieFormComponent,\n    NotFoundPageComponent,\n    LoginComponent,\n    RegisterComponent,\n    EditMovieFormComponent,\n    PostsComponent,\n    MovieComponent\n  ],\n  imports: [BrowserModule, HttpModule, RoutingModule],\n  providers: [PostService, NowShowingMoviesService, ComingSoonMoviesService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h2>Add new movie</h2>\\n\\n<form>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"movieName\\\">Movie Name</label>\\n        <input id=\\\"movieName\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Year</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Director(s)</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Actors</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Summary</label>\\n        <textarea class=\\\"form-control\\\"></textarea>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Session</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <button class=\\\"btn btn-primary\\\">Submit</button>\\n</form>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"add-movie-form\",\n  templateUrl: \"./add-movie-form.component.html\",\n  styleUrls: [\"./add-movie-form.component.css\"]\n})\nexport class AddMovieFormComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"\"","module.exports = \"<h2>Awards</h2>\\n<p>Award page is in progress.</p>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"award\",\n  templateUrl: \"./award.component.html\",\n  styleUrls: [\"./award.component.css\"]\n})\nexport class AwardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \".comingSoonBlock {\\n    border-style: solid;\\n    background-color: whitesmoke;\\n  }\\n  \\n  h2 {\\n    text-align: center;\\n  }\\n  \"","module.exports = \"<div class=\\\"comingSoonBlock\\\">\\n  <h2>Coming Soon Movies</h2>\\n  <ul>\\n    <li routerLink=\\\"../editMovieForm\\\" *ngFor=\\\"let movie of movies\\\">{{movie.name}}\\n      <button class=\\\"btn btn-info btn-sm\\\" routerLink=\\\" ../editMovieForm\\\">Edit</button>\\n    </li>\\n  </ul>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { PostService } from \"../../services/post.service\";\n\n@Component({\n  selector: \"coming-soon-movie-list\",\n  templateUrl: \"./coming-soon-movie-list.component.html\",\n  styleUrls: [\"./coming-soon-movie-list.component.css\"]\n})\nexport class ComingSoonMovieListComponent implements OnInit {\n  movies: any[];\n\n  constructor(private service: PostService) {}\n\n  ngOnInit() {\n    this.service.getPosts().subscribe(response => {\n      this.movies = response.json();\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<h2>About us</h2>\\n<p>About us page is in progress.</p>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"company-information\",\n  templateUrl: \"./company-information.component.html\",\n  styleUrls: [\"./company-information.component.css\"]\n})\nexport class CompanyInformationComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"\"","module.exports = \"<h2>Edit movie</h2>\\n\\n<form>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"movieName\\\">Movie Name</label>\\n        <input id=\\\"movieName\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Year</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Director(s)</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Actors</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Summary</label>\\n        <textarea class=\\\"form-control\\\"></textarea>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Session</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <button class=\\\"btn btn-primary\\\">Save changes</button>\\n</form>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"edit-movie-form\",\n  templateUrl: \"./edit-movie-form.component.html\",\n  styleUrls: [\"./edit-movie-form.component.css\"]\n})\nexport class EditMovieFormComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \".footer {\\n  background-color: whitesmoke;\\n  position: fixed;\\n  left: 0;\\n  bottom: 0;\\n  width: 100%;\\n  color: black;\\n  text-align: center;\\n}\\n\"","module.exports = \"<div class=\\\"footer\\\">\\n  {{companyName}}\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"footer\",\n  templateUrl: \"./footer.component.html\",\n  styleUrls: [\"./footer.component.css\"]\n})\nexport class FooterComponent implements OnInit {\n  companyName = \"@Golden Time Cooperation\";\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"\"","module.exports = \"<h2>Gerne</h2>\\n<p>Gerne page is in progress.</p>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"genre\",\n  templateUrl: \"./genre.component.html\",\n  styleUrls: [\"./genre.component.css\"]\n})\nexport class GenreComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"h1 {\\n  text-align: center;\\n  font: bold;\\n}\\n\"","module.exports = \"<div>\\n  <h1>{{title}}</h1>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"header\",\n  templateUrl: \"./header.component.html\",\n  styleUrls: [\"./header.component.css\"]\n})\nexport class HeaderComponent implements OnInit {\n  title = \"Golden Time Cinema\";\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"\"","module.exports = \"<br/>\\n<br/>\\n<search-bar></search-bar>\\n<br/>\\n<br/>\\n<now-showing-movie-list></now-showing-movie-list>\\n<br/>\\n<coming-soon-movie-list></coming-soon-movie-list>\\n<br/>\\n<button class=\\\"btn btn-primary\\\" routerLink=\\\"../addMovieForm\\\">New Movie</button>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.css\"]\n})\nexport class HomeComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"\"","module.exports = \"<h2>Log in</h2>\\n\\n<form>\\n    <div class=\\\"form-group\\\">\\n        <label>Username</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Password</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <button class=\\\"btn btn-primary\\\">Submit</button>\\n</form>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <label>{{name}}</label>\\n  <br/>\\n  <label>{{showtime}}</label>\\n  <br/>\\n  <label>{{runningTime}}</label>\\n  <br/>\\n  <label>{{director}}</label>\\n  <br/>\\n  <label>{{stars}}</label>\\n  <br/>\\n  <label>{{name}}</label>\\n  <br/>\\n  <label>{{storyline}}</label>\\n  <br/>\\n  <label>{{status}}</label>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\nexport class MovieComponent implements OnInit {\n  name: string;\n  showtime: string[];\n  runningTime: number;\n  director: string;\n  genre: string;\n  stars: string;\n  storyline: string;\n  status: string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".navigationBar {\\n  display: block;\\n  background-color: whitesmoke;\\n}\\n\\na {\\n  text-decoration: none;\\n  color: black;\\n  padding-right: 50px;\\n  padding-left: 50px;\\n}\\n\"","module.exports = \"<nav class=\\\"navigationBar\\\">\\n\\n  <a routerLink=\\\"../home\\\">{{home}}</a>\\n  <a routerLink=\\\"../genre\\\">{{genre}}</a>\\n  <a routerLink=\\\"../award\\\">{{award}}</a>\\n  <a routerLink=\\\"../companyInformation\\\">{{companyInformation}}</a>\\n  <a routerLink=\\\"../login\\\">Log in</a>\\n  <a routerLink=\\\"../register\\\">Register</a>\\n</nav>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"navigation-bar\",\n  templateUrl: \"./navigation-bar.component.html\",\n  styleUrls: [\"./navigation-bar.component.css\"]\n})\nexport class NavigationBarComponent implements OnInit {\n  logIn = \"Log In\";\n  home = \"Home\";\n  signUp = \"Sign Up\";\n  genre = \"Genre\";\n  award = \"Awards\";\n  companyInformation = \"About us\";\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"\"","module.exports = \"<p>Sorry, the page has not been found!</p>\\n<footer></footer>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"not-found-page\",\n  templateUrl: \"./not-found-page.component.html\",\n  styleUrls: [\"./not-found-page.component.css\"]\n})\nexport class NotFoundPageComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \".nowShowingBlock {\\n    border-style: solid;\\n    background-color: whitesmoke;\\n  }\\n  \\n  h2 {\\n    text-align: center;\\n  }\\n  \"","module.exports = \"<div class=\\\"nowShowingBlock\\\">\\n  <h2>Now Showing Movies</h2>\\n  <ul>\\n    <li *ngFor=\\\"let movie of movies\\\">{{movie.name}}\\n      <button class=\\\"btn btn-info btn-sm\\\" routerLink=\\\"../editMovieForm\\\">\\n        Edit\\n      </button>\\n    </li>\\n  </ul>\\n\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { PostService } from \"../../services/post.service\";\n\n@Component({\n  selector: \"now-showing-movie-list\",\n  templateUrl: \"./now-showing-movie-list.component.html\",\n  styleUrls: [\"./now-showing-movie-list.component.css\"]\n})\nexport class NowShowingMovieListComponent implements OnInit {\n  movies: any[];\n  nowShowingMovies: any[];\n  constructor(private service: PostService) { }\n\n  ngOnInit() {\n    this.service.getPosts().subscribe(response => {\n      this.movies = response.json();\n    });\n  }\n\n  // getNowShowingMovie() {\n  //   for (let movie of this.movies) {\n  //     if (movie.status == \"nowShowing\") {\n  //       this.nowShowingMovies.push(movie);\n  //     }\n  //   }\n  // }\n}\n","module.exports = \"\"","module.exports = \"<input (keyup.enter)=\\\"createPost(title)\\\" #title type=\\\"text\\\" class=\\\"form-control\\\">\\n<ul class=\\\"list-group\\\">\\n  <li *ngFor=\\\"let post of posts\\\" class=\\\"list-group-item\\\">\\n    <button (click)=\\\"updatePost(post)\\\" btn btn-default btn-sm>Update</button>\\n    <button (click)=\\\"deletePost(post)\\\" btn btn-default btn-sm>Delete</button>\\n    {{post.title}}\\n  </li>\\n</ul>\"","import { PostService } from \"../../services/post.service\";\nimport { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"posts\",\n  templateUrl: \"./posts.component.html\",\n  styleUrls: [\"./posts.component.css\"]\n})\nexport class PostsComponent implements OnInit {\n  posts: any[];\n\n  constructor(private service: PostService) {}\n\n  ngOnInit() {\n    this.service.getPosts().subscribe(response => {\n      this.posts = response.json();\n    });\n  }\n\n  createPost(input: HTMLInputElement) {\n    let post = { title: input.value };\n    input.value = \"\";\n\n    this.service.createPosts(post).subscribe(response => {\n      post[\"id\"] = response.json().id;\n      this.posts.splice(0, 0, post);\n    });\n  }\n\n  updatePost(post) {\n    //this.http.patch(this.url, JSON.stringify({ isRead: true }))\n    this.service.updatePosts(post).subscribe(response => {\n      console.log(response.json());\n    });\n  }\n\n  deletePost(post) {\n    this.service.deletePosts(post.id).subscribe(response => {\n      let index = this.posts.indexOf(post);\n      this.posts.splice(index, 1);\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<h2>Create an account</h2>\\n\\n<form>\\n    <div class=\\\"form-group\\\">\\n        <label>Email</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Username</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Password</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n    </div>\\n\\n    <button class=\\\"btn btn-primary\\\">Submit</button>\\n</form>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"register\",\n  templateUrl: \"./register.component.html\",\n  styleUrls: [\"./register.component.css\"]\n})\nexport class RegisterComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"\"","module.exports = \"<input type=\\\"text\\\" value={{defaultText}}>\\n<button class=\\\"btn btn-primary\\\">{{buttonName}}</button>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"search-bar\",\n  templateUrl: \"./search-bar.component.html\",\n  styleUrls: [\"./search-bar.component.css\"]\n})\nexport class SearchBarComponent implements OnInit {\n  defaultText = \"Plese enter here\";\n  buttonName = \"Search\";\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { GenreComponent } from \"./components/genre/genre.component\";\nimport { HomeComponent } from \"./components/home/home.component\";\nimport { AwardComponent } from \"./components/award/award.component\";\nimport { CompanyInformationComponent } from \"./components/company-information/company-information.component\";\nimport { NotFoundPageComponent } from \"./components/not-found-page/not-found-page.component\";\nimport { AddMovieFormComponent } from \"./components/add-movie-form/add-movie-form.component\";\nimport { LoginComponent } from \"./components/login/login.component\";\nimport { RegisterComponent } from \"./components/register/register.component\";\nimport { EditMovieFormComponent } from \"./components/edit-movie-form/edit-movie-form.component\";\n\nconst routes: Routes = [\n    {\n        path: \"\",\n        component: HomeComponent\n    },\n    {\n        path: \"home\",\n        component: HomeComponent\n    },\n    {\n        path: \"genre\",\n        component: GenreComponent\n    },\n    {\n        path: \"award\",\n        component: AwardComponent\n    },\n    {\n        path: \"companyInformation\",\n        component: CompanyInformationComponent\n    },\n    {\n        path: \"addMovieForm\",\n        component: AddMovieFormComponent\n    },\n    {\n        path: \"login\",\n        component: LoginComponent\n    },\n    {\n        path: \"register\",\n        component: RegisterComponent\n    },\n    {\n        path: \"editMovieForm\",\n        component: EditMovieFormComponent\n    },\n    {\n        path: \"**\",\n        component: NotFoundPageComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class RoutingModule { }\n","import { Injectable } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ComingSoonMoviesService {\n\n  getUpcomingMovies() {\n    return [\n      \"The Lord of Ring\",\n      \"Notting Hill\",\n      \"Harry Potter\",\n      \"American Hustles\"\n    ];\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class NowShowingMoviesService {\n  getShowingMovies() {\n    return [\n      \"Good Will Hunting\",\n      \"Forest Gump\",\n      \"Catch Me If You Can\",\n      \"Terminal\"\n    ];\n  }\n}\n","import { Http } from '@angular/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n  private url = '/api/movies';\n\n  constructor(private http: Http) { }\n\n  getPosts() {\n    return this.http.get(this.url);\n  }\n\n  createPosts(post) {\n    return this.http.post(this.url, JSON.stringify(post));\n  }\n\n  updatePosts(post) {\n    return this.http.put(this.url + '/' + post.id, JSON.stringify(post));\n  }\n\n  deletePosts(id) {\n    return this.http.delete(this.url + '/' + id);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}